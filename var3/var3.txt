subI
1.b
2
a.5 9 5 5 5
b.7 3 8 1 0
c.
citește z, x
repeta
  citește y
  dacă z < y - x atunci
    scrie x % 10
  altfel
    scrie y % 10
  x y
până când x <= 0

d.
#include <iostream>
using namespace std;

int main() {
    int z, x, y;
    cin >> z >> x;
    while (x > 0) {
        cin >> y;
        if (z < y - x) {
            cout << x % 10;
        } else {
            cout << y % 10;
        }
        x = y;
    }
    return 0;
}

sub II
1.b
2.c
3.
f.x = f1.x * f2.y + f2.x * f1.y;
f.y = f1.y * f2.y;

4.

5

subIII
1.c
2.x y y y
3.
#include <iostream>
#include <fstream>
#include <cstdlib>
using namespace std;

void sort(int arr[], int n) {
    for (int i = 0; i < n - 1; ++i) {
        for (int j = i + 1; j < n; ++j) {
            if (arr[i] > arr[j]) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}

int main() {
    ifstream infile("NR.TXT");
    if (!infile.is_open()) {
        cerr << "Nu s-a putut deschide fisierul NR.TXT" << endl;
        return 1;
    }

    int numbers[100];
    int count = 0, num;

    while (infile >> num) {
        if (num >= 100) {
            numbers[count++] = num;
        }
    }

    infile.close();

    if (count == 0) {
        cout << "NU EXISTA" << endl;
    } else {
        sort(numbers, count);
        for (int i = 0; i < count; ++i) {
            cout << numbers[i] << " ";
        }
        cout << endl;
    }

    return 0;
}


4.
a.
int cif(int a, int b) {
    int count = 0;
    while (a > 0) {
        if (a % 10 == b) {
            count++;
        }
        a /= 10;
    }
    return count;
}

#include <iostream>
#include <algorithm>
using namespace std;

int cif(int a, int b) {
    int count = 0;
    while (a > 0) {
        if (a % 10 == b) {
            count++;
        }
        a /= 10;
    }
    return count;
}

bool canFormPalindrome(int count[10]) {
    int oddCount = 0;
    for (int i = 0; i < 10; i++) {
        if (count[i] % 2 != 0) {
            oddCount++;
        }
    }
    return oddCount <= 1;
}

void formPalindrome(int count[10], char result[9]) {
    int pos = 0;
    char middle = '\0';

    for (int i = 9; i >= 0; i--) {
        if (count[i] % 2 != 0) {
            middle = '0' + i;
        }
        for (int j = 0; j < count[i] / 2; j++) {
            result[pos] = '0' + i;
            result[7 - pos] = '0' + i;
            pos++;
        }
    }
    if (middle != '\0') {
        result[pos] = middle;
    }
    result[8] = '\0';
}

int main() {
    char n[9];
    cin >> n;

    if (strlen(n) != 8) {
        cout << 0 << endl;
        return 0;
    }

    int count[10] = {0};

    for (int i = 0; i < 8; i++) {
        count[n[i] - '0']++;
    }

    if (canFormPalindrome(count)) {
        char result[9];
        formPalindrome(count, result);
        cout << result << endl;
    } else {
        cout << 0 << endl;
    }

    return 0;
}


sub whatsapp
b. 7 si 35

c
citește n, k
t <- 0
i <- 0
cât timp n > 0 sau i > 0 execută
    dacă n >= 1 atunci
        dacă n > k atunci i <- k
        altfel i <- n
        t <- t + 1
        n <- n - i
    altfel
        scrie t, ' '
        i <- i - 1











